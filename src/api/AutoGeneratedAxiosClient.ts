/* generated using openapi-typescript-codegen -- do no edit */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { BaseHttpRequest } from './core/BaseHttpRequest';
import type { OpenAPIConfig } from './core/OpenAPI';
import { AxiosHttpRequest } from './core/AxiosHttpRequest';
import { AnimeService } from './services/AnimeService';
import { CharactersService } from './services/CharactersService';
import { ClubsService } from './services/ClubsService';
import { GenresService } from './services/GenresService';
import { MagazinesService } from './services/MagazinesService';
import { MangaService } from './services/MangaService';
import { PeopleService } from './services/PeopleService';
import { ProducersService } from './services/ProducersService';
import { RandomService } from './services/RandomService';
import { RecommendationsService } from './services/RecommendationsService';
import { ReviewsService } from './services/ReviewsService';
import { SchedulesService } from './services/SchedulesService';
import { SeasonsService } from './services/SeasonsService';
import { TopService } from './services/TopService';
import { UsersService } from './services/UsersService';
import { WatchService } from './services/WatchService';
type HttpRequestConstructor = new (config: OpenAPIConfig) => BaseHttpRequest;
export class AutoGeneratedAxiosClient {
    public readonly anime: AnimeService;
    public readonly characters: CharactersService;
    public readonly clubs: ClubsService;
    public readonly genres: GenresService;
    public readonly magazines: MagazinesService;
    public readonly manga: MangaService;
    public readonly people: PeopleService;
    public readonly producers: ProducersService;
    public readonly random: RandomService;
    public readonly recommendations: RecommendationsService;
    public readonly reviews: ReviewsService;
    public readonly schedules: SchedulesService;
    public readonly seasons: SeasonsService;
    public readonly top: TopService;
    public readonly users: UsersService;
    public readonly watch: WatchService;
    public readonly request: BaseHttpRequest;
    constructor(config?: Partial<OpenAPIConfig>, HttpRequest: HttpRequestConstructor = AxiosHttpRequest) {
        this.request = new HttpRequest({
            BASE: config?.BASE ?? 'https://api.jikan.moe/v4',
            VERSION: config?.VERSION ?? '4.0.0',
            WITH_CREDENTIALS: config?.WITH_CREDENTIALS ?? false,
            CREDENTIALS: config?.CREDENTIALS ?? 'include',
            TOKEN: config?.TOKEN,
            USERNAME: config?.USERNAME,
            PASSWORD: config?.PASSWORD,
            HEADERS: config?.HEADERS,
            ENCODE_PATH: config?.ENCODE_PATH,
        });
        this.anime = new AnimeService(this.request);
        this.characters = new CharactersService(this.request);
        this.clubs = new ClubsService(this.request);
        this.genres = new GenresService(this.request);
        this.magazines = new MagazinesService(this.request);
        this.manga = new MangaService(this.request);
        this.people = new PeopleService(this.request);
        this.producers = new ProducersService(this.request);
        this.random = new RandomService(this.request);
        this.recommendations = new RecommendationsService(this.request);
        this.reviews = new ReviewsService(this.request);
        this.schedules = new SchedulesService(this.request);
        this.seasons = new SeasonsService(this.request);
        this.top = new TopService(this.request);
        this.users = new UsersService(this.request);
        this.watch = new WatchService(this.request);
    }
}

